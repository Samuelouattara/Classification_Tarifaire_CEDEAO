// Script de diagnostic pour v√©rifier le chargement des d√©pendances
// √Ä ajouter temporairement pour diagnostiquer les probl√®mes

(function() {
    console.log('üîß DIAGNOSTIC DU SYST√àME - D√âBUT');
    
    // V√©rifier la pr√©sence des classes/fonctions essentielles
    const checks = [
        { name: 'DatabaseManager', obj: window.DatabaseManager, type: 'class' },
        { name: 'TariffAIClassifier', obj: window.TariffAIClassifier, type: 'class' },
        { name: 'codesSpecifiques', obj: window.codesSpecifiques, type: 'object' },
        { name: 'rechercherCodesSpecifiques', obj: window.rechercherCodesSpecifiques, type: 'function' }
    ];
    
    checks.forEach(check => {
        if (check.obj) {
            console.log(`‚úÖ ${check.name} : Disponible (${check.type})`);
        } else {
            console.error(`‚ùå ${check.name} : MANQUANT (${check.type})`);
        }
    });
    
    // V√©rifier l'initialisation du dbManager
    setTimeout(() => {
        if (window.dbManager) {
            console.log('‚úÖ window.dbManager : Initialis√©');
            
            // V√©rifier les m√©thodes essentielles
            const methods = ['saveClassifiedProduct', 'saveToLocalHistory', 'testConnection'];
            methods.forEach(method => {
                if (typeof window.dbManager[method] === 'function') {
                    console.log(`‚úÖ dbManager.${method} : Disponible`);
                } else {
                    console.error(`‚ùå dbManager.${method} : MANQUANT`);
                }
            });
        } else {
            console.error('‚ùå window.dbManager : NON INITIALIS√â');
        }
    }, 2000);
    
    // V√©rifier le localStorage
    try {
        localStorage.setItem('test', 'ok');
        localStorage.removeItem('test');
        console.log('‚úÖ localStorage : Fonctionnel');
    } catch (error) {
        console.error('‚ùå localStorage : ERREUR', error);
    }
    
    // V√©rifier l'iframe du tableau
    setTimeout(() => {
        const iframe = document.querySelector('iframe[src="tableau.html"]');
        if (iframe) {
            console.log('‚úÖ Tableau iframe : Trouv√©e');
            
            iframe.addEventListener('load', () => {
                if (iframe.contentWindow && iframe.contentWindow.addProductToTable) {
                    console.log('‚úÖ Tableau.addProductToTable : Disponible');
                } else {
                    console.warn('‚ö†Ô∏è Tableau.addProductToTable : Non accessible');
                }
            });
        } else {
            console.error('‚ùå Tableau iframe : MANQUANTE');
        }
    }, 1000);
    
    console.log('üîß DIAGNOSTIC DU SYST√àME - FIN');
})();

// Fonction utilitaire pour d√©bugger les erreurs
window.debugClassification = function() {
    console.log('üêõ DEBUG CLASSIFICATION');
    console.log('DatabaseManager:', typeof window.DatabaseManager);
    console.log('dbManager:', typeof window.dbManager);
    console.log('aiClassifier:', typeof window.aiClassifier);
    
    if (window.dbManager) {
        console.log('dbManager methods:', Object.getOwnPropertyNames(window.dbManager));
    }
    
    // Tester la sauvegarde locale
    try {
        const testEntry = {
            section: { number: 'TEST', title: 'Test Section' },
            confidence: 99,
            code: 'TEST.00.00.00'
        };
        
        if (window.dbManager && typeof window.dbManager.saveToLocalHistory === 'function') {
            window.dbManager.saveToLocalHistory('Test debug', testEntry);
            console.log('‚úÖ Test sauvegarde locale : R√©ussi');
        } else {
            console.error('‚ùå Test sauvegarde locale : √âchec');
        }
    } catch (error) {
        console.error('‚ùå Erreur test sauvegarde locale:', error);
    }
};